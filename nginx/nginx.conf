user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log  /var/log/nginx/error.log;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '[$time_local]($remote_addr)($request_time seconds) $status "$request" '
                      '"$http_user_agent"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;

    upstream authenticate-flask {
        server localhost:5000;
    }

    server {
        # authenticate-flask
        server_name authello.mit.edu;
        listen 443;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/authello.mit.edu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/authello.mit.edu/privkey.pem;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_client_certificate /etc/nginx/mitca.pem;
        ssl_verify_client on;
        location / {
            proxy_set_header X-Certificate-Info $ssl_client_s_dn;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://authenticate-flask;
        }
    }
        
    server {
        server_name auth.xfair.io;
        listen 443;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/auth.xfair.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/auth.xfair.io/privkey.pem;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        return 302 https://authello.mit.edu$request_uri;
    }

    server {
        # Catchall
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }
}
